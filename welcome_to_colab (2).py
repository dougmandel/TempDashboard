# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

pip install pandas streamlit matplotlib seaborn

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import os

# Title of the Dashboard
st.title("Interactive Data Dashboard")
st.write("Explore your data interactively using Streamlit. Use the sidebar to filter and customize your view.")

# Step 1: Check if the CSV file exists
if not os.path.exists("annual_data.csv"):
    st.error("The file 'annual_data.csv' is missing! Please ensure the file is in the same folder as this app script.")
else:
    # Step 2: Load the data
    data = pd.read_csv("annual_data.csv")

    # Sidebar filters
    st.sidebar.header("Filters")

    # Filter by Source
    source_filter = st.sidebar.multiselect(
        "Select Source(s):",
        options=data["Source"].unique(),
        default=data["Source"].unique(),
    )

    # Filter by Year Range
    year_range = st.sidebar.slider(
        "Select Year Range:",
        int(data["Year"].min()),
        int(data["Year"].max()),
        (int(data["Year"].min()), int(data["Year"].max()))
    )

    # Apply filters to the data
    filtered_data = data[
        (data["Source"].isin(source_filter)) &
        (data["Year"].between(year_range[0], year_range[1]))
    ]

    # Step 3: Display the filtered data
    st.header("Filtered Data")
    st.write(filtered_data)

    # Step 4: Display Summary Statistics
    st.header("Summary Statistics")
    st.write(filtered_data.describe())

    # Step 5: Visualization - Line Chart
    st.header("Yearly Trends")
    if not filtered_data.empty:
        fig, ax = plt.subplots()
        for source in filtered_data["Source"].unique():
            source_data = filtered_data[filtered_data["Source"] == source]
            ax.plot(source_data["Year"], source_data["Mean"], label=source)

        ax.set_title("Yearly Mean Trends by Source")
        ax.set_xlabel("Year")
        ax.set_ylabel("Mean")
        ax.legend()
        st.pyplot(fig)
    else:
        st.warning("No data available for the selected filters.")





